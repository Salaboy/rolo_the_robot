package com.salaboy.rolo;

import com.salaboy.rolo.model.*;
import com.salaboy.rolo.*;

import com.salaboy.rolo.api.*;
import com.salaboy.rolo.api.Motor.*;

import com.salaboy.rolo.transport.*;

import org.kie.internal.event.rule.*;
import org.kie.api.runtime.rule.*;
import org.drools.core.common.*;


declare com.salaboy.rolo.model.reports.DistanceReport
    @role(event)
    @expires(1s)
end

declare com.salaboy.rolo.model.reports.LightReport
    @role(event)
    @expires(2s)
end

query getAllMotors()
    Motor()
end

query getAllSensors()
    Sensor()
end

query getAllDistanceSensors()
    DistanceSensor()
end

query getAllTiltSensors()
    TiltSensor()
end

global HornetQSessionWriter notifications;



rule "Too Dark - Look another place" 
    when
        $r: RoloTheRobot()
        $s180: Servo180(name == "Head")
        LightSensor( $sensor: name )
        $n: Number( doubleValue < 300) from accumulate (LightReport( sensorName == $sensor, $l: lightIntensity ) over window:time( 10s ) from entry-point "light-sensor", average($l))
        
    then
       notifications.write("Process-TOO_DARK:"+$n); 
       try{
            $s180.rotate(170);
            Thread.sleep(1000);
            $s180.rotate(0);
            Thread.sleep(1000);
            $s180.rotate(80);
            Thread.sleep(1000);
            
       }catch(Exception e){
           e.printStackTrace();
       }     
       
end



















/*rule "Something is getting Closer" 
    when
        $r: RoloTheRobot()
        DistanceSensor( $sensor: name )
        $n: Number( doubleValue < 0.5 ) from accumulate (DistanceReport( sensorName == $sensor, $d: distance ) over window:time( 1000ms ) from entry-point "distance-sensor", tendency($d))
        
    then
       System.out.println("WARN: Something is getting closer" + $n);
end

rule "Something is going away" 
    when
        $r: RoloTheRobot()
        DistanceSensor( $sensor: name )
        $n: Number( doubleValue > 0.5 ) from accumulate (DistanceReport( sensorName == $sensor, $d: distance ) over window:time( 1000ms ) from entry-point "distance-sensor", tendency($d))
        
    then
       System.out.println("WARN: Something is going away" + $n);
end*/



/*rule " Robot log" 
    when
        
        $n: Number( doubleValue > 50) from accumulate (DistanceReport( $d: distance ) over window:time( 300ms ) from entry-point "distance-sensor", average($d))
    then
       System.out.println("Current avg: "+$n);
       

end*/






