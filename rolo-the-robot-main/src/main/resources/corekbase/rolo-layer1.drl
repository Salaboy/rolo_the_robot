package com.salaboy.rolo;

import com.salaboy.rolo.model.*;
import com.salaboy.rolo.*;

import com.salaboy.rolo.api.*;
import com.salaboy.rolo.api.Motor.*;

import com.salaboy.rolo.transport.*;

import org.kie.internal.event.rule.*;
import org.kie.api.runtime.rule.*;
import org.drools.core.common.*;

/* Layer One: This Layer is about Obstacle avoidance and path finding */

rule "Something too close - Robot Go Back" 
    when
        $r: RoloTheRobot()
        $m: Motor(  )
        UltraSonicSensor( $sensor: name )
        $n: Number( doubleValue < 30) from accumulate (DistanceReport( sensorName == $sensor, $d: distance ) over window:time( 300ms ) from entry-point "distance-sensor", average($d))
        
    then
       notifications.write("Process-SOMETHING_TOO_CLOSE:"+$n); 
       System.out.println(" >>> Process-SOMETHING_TOO_CLOSE:"+$n); 
       $m.start(120, DIRECTION.BACKWARD);
       Match item = ( Match ) kcontext.getMatch();
              final Motor motor = $m;
              final HornetQSessionWriter notif = notifications;
              ((AgendaItem)item).setActivationUnMatchListener( new ActivationUnMatchListener() {
                    public void unMatch(Session session,
                                        Match match) {
                        System.out.println(" >>> Stopping Motor because avg over: 30");                
                        motor.stop();
                        try{
                            notif.write("Stopping Motor because avg over: 30");
                        } catch(Exception e){
                            System.out.println(" >>> ERROR sending notification!!!");
                        }
                        
                   }
                } );


end