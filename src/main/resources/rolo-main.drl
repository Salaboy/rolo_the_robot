package com.salaboy.lego.wedo;

import com.salaboy.rolo.model.*;
import com.salaboy.rolo.wedo.api.*; 
import com.salaboy.rolo.wedo.api.Motor.*;

import org.drools.common.*;
import org.kie.event.rule.*;
import org.kie.runtime.rule.*;
import org.kie.runtime.KnowledgeRuntime;

declare DistanceReport
    @role(event)
    @expires(1s)
end

query getAllMotors()
    Motor()
end

query getAllSensors()
    Sensor()
end

query getAllDistanceSensors()
    DistanceSensor()
end

query getAllTiltSensors()
    TiltSensor()
end


rule "Something too close - Robot Go Back" 
    when
        $r: RoloTheRobot()
        $m: Motor( name == "main" )
        DistanceSensor( $sensor: name )
        Number( doubleValue < 50) from accumulate (DistanceReport( sensorName == $sensor, $d: distance ) over window:time( 300ms ) from entry-point "distance-sensor", average($d))
        
    then
       $m.start(120, DIRECTION.BACKWARD);
       AgendaItem item = ( AgendaItem ) kcontext.getActivation();
              final Motor motor = $m;
              item.setActivationUnMatchListener( new ActivationUnMatchListener() {
                    
                    public void unMatch(org.kie.runtime.rule.WorkingMemory wm,
                                        org.kie.runtime.rule.Match match) {
                        System.out.println(" Stop Motor");
                        motor.stop();
                        
                   }
                } );
     
       


end


rule "Something is getting Closer" 
    when
        $r: RoloTheRobot()
        DistanceSensor( $sensor: name )
        $n: Number( doubleValue < 0.5 ) from accumulate (DistanceReport( sensorName == $sensor, $d: distance ) over window:time( 1000ms ) from entry-point "distance-sensor", tendency($d))
        
    then
       System.out.println("WARN: Something is getting closer" + $n);
end

rule "Something is going away" 
    when
        $r: RoloTheRobot()
        DistanceSensor( $sensor: name )
        $n: Number( doubleValue > 0.5 ) from accumulate (DistanceReport( sensorName == $sensor, $d: distance ) over window:time( 1000ms ) from entry-point "distance-sensor", tendency($d))
        
    then
       System.out.println("WARN: Something is going away" + $n);
end



/*rule " Robot log" 
    when
        
        $n: Number( doubleValue > 50) from accumulate (DistanceReport( $d: distance ) over window:time( 300ms ) from entry-point "distance-sensor", average($d))
    then
       System.out.println("Current avg: "+$n);
       

end*/






